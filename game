<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>FAME Quiz Game</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
        }
    </style>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    fontFamily: {
                        'inter': ['Inter', 'sans-serif'],
                    },
                },
            },
        }
    </script>
</head>
<body class="bg-gradient-to-r from-blue-100 to-purple-100 flex justify-center items-center min-h-screen p-4">
    <div class="bg-white rounded-lg shadow-xl p-8 w-full max-w-2xl text-center">
        <h1 class="text-3xl font-semibold text-indigo-600 mb-6">Test Your FAME Knowledge!</h1>
        <div id="question-container" class="mb-6">
            <h2 class="text-xl font-medium text-gray-800 mb-4">Question:</h2>
            <p id="question-text" class="text-lg text-gray-700"></p>
            <ul id="answer-options" class="list-none p-0 m-0 mt-4">
                </ul>
        </div>
        <div id="feedback" class="mt-6 p-4 rounded-md hidden">
            <h3 id="feedback-title" class="text-lg font-semibold">Result</h3>
            <p id="feedback-text" class="text-gray-700"></p>
        </div>
        <div class="flex justify-center gap-4 mt-6">
            <button id="next-button" class="bg-green-500 hover:bg-green-600 text-white font-semibold py-2.5 px-5 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-400 transition duration-300 ease-in-out hidden">
                Next Question
            </button>
            <button id="restart-button" class="bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2.5 px-5 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-400 transition duration-300 ease-in-out hidden">
                Play Again
            </button>
        </div>
        <p id="progress" class="mt-4 text-gray-500"></p>
    </div>
    <script>
        const quizData = [
            {
                question: "What is the primary goal of the FAME program?",
                options: [
                    "To evaluate teacher performance.",
                    "To train teachers in formative assessment.",
                    "To standardize curriculum across Michigan.",
                    "To increase standardized testing scores."
                ],
                correctAnswer: "To train teachers in formative assessment."
            },
            {
                question: "Which organizations are involved in the FAME initiative?",
                options: [
                    "Michigan Department of Education (MDE) and National Education Association (NEA).",
                    "Michigan Assessment Consortium (MAC) and Michigan Education Association (MEA).",
                    "Michigan Department of Education (MDE) and Michigan Assessment Consortium (MAC).",
                    "National Science Foundation (NSF) and MDE."
                ],
                correctAnswer: "Michigan Department of Education (MDE) and Michigan Assessment Consortium (MAC)."
            },
            {
                question: "What is the role of a FAME Coach?",
                options: [
                    "To conduct formal teacher evaluations.",
                    "To lead FAME Learning Teams and support teachers.",
                    "To develop statewide assessments.",
                    "To provide professional development on all subjects."
                ],
                correctAnswer: "To lead FAME Learning Teams and support teachers."
            },
            {
                question: "What is the focus of formative assessment, as emphasized by FAME?",
                options: [
                    "Summative evaluation of student learning.",
                    "Using assessment to inform and adjust instruction.",
                    "Standardized testing procedures.",
                    "Grading and ranking students."
                ],
                correctAnswer: "Using assessment to inform and adjust instruction."
            },
            {
                question: "What is a key component of the FAME Learning Team model?",
                options: [
                    "Individual teacher planning.",
                    "Collaborative learning and implementation.",
                    "Top-down directives from administrators.",
                    "Focus on high-stakes testing."
                ],
                correctAnswer: "Collaborative learning and implementation."
            },
            {
                question: "How many FAME coaches have been trained as of 2024?",
                options: [
                    "Over 500",
                    "Over 1,000",
                    "Over 1,500",
                    "Over 2,000"
                ],
                correctAnswer: "Over 1,500"
            },
            {
                question: "What does the acronym MAC stand for?",
                options: [
                    "Michigan Achievement Collaborative",
                    "Michigan Assessment Consortium",
                    "Michigan Association of Coaches",
                    "Master Assessment Committee"
                ],
                correctAnswer: "Michigan Assessment Consortium"
            },
            {
                question: "Which of the following is a step in the formative assessment cycle?",
                options: [
                    "Assigning grades",
                    "Providing feedback to students",
                    "Summative evaluation",
                    "Ranking students"
                ],
                correctAnswer: "Providing feedback to students"
            },
            {
                question: "What is the ultimate goal of FAME?",
                options: [
                    "To increase teacher workload",
                    "To improve student achievement",
                    "To standardize teaching methods",
                    "To reduce educational spending"
                ],
                correctAnswer: "To improve student achievement"
            },
            {
                question: "What kind of support do FAME coaches receive?",
                options: [
                    "Only initial training",
                    "Ongoing training and support, including Regional Leads",
                    "No additional support",
                    "Support focused solely on testing"
                ],
                correctAnswer: "Ongoing training and support, including Regional Leads"
            }
        ];
        let currentQuestionIndex = 0;
        let score = 0;
        let userAnswers = [];
        const questionContainer = document.getElementById('question-container');
        const questionText = document.getElementById('question-text');
        const answerOptions = document.getElementById('answer-options');
        const nextButton = document.getElementById('next-button');
        const restartButton = document.getElementById('restart-button');
        const feedback = document.getElementById('feedback');
        const feedbackTitle = document.getElementById('feedback-title');
        const feedbackText = document.getElementById('feedback-text');
        const progressDisplay = document.getElementById('progress');
        function displayQuestion() {
            const currentQuestion = quizData[currentQuestionIndex];
            questionText.textContent = currentQuestion.question;
            answerOptions.innerHTML = '';
            // Create a copy of the options array to shuffle
            const shuffledOptions = [...currentQuestion.options];
            // Fisher-Yates shuffle algorithm to shuffle the options
            for (let i = shuffledOptions.length - 1; i > 0; i--) {
                const j = Math.floor(Math.random() * (i + 1));
                [shuffledOptions[i], shuffledOptions[j]] = [shuffledOptions[j], shuffledOptions[i]];
            }
            shuffledOptions.forEach((option, index) => {
                const listItem = document.createElement('li');
                listItem.textContent = option;
                listItem.classList.add('bg-indigo-500', 'hover:bg-indigo-600', 'text-white', 'font-semibold', 'py-2.5', 'px-5', 'rounded-lg', 'mb-2', 'cursor-pointer', 'transition', 'duration-300', 'ease-in-out', 'shadow-md');
                listItem.dataset.option = option;
                listItem.addEventListener('click', handleAnswerSelection);
                answerOptions.appendChild(listItem);
            });
            nextButton.classList.add('hidden');
            feedback.classList.add('hidden');
            progressDisplay.textContent = `Question ${currentQuestionIndex + 1} of ${quizData.length}`;
        }
        function handleAnswerSelection(event) {
            const selectedAnswer = event.target.dataset.option;
            const currentQuestion = quizData[currentQuestionIndex];
            userAnswers[currentQuestionIndex] = selectedAnswer;
            if (selectedAnswer === currentQuestion.correctAnswer) {
                score++;
                feedbackTitle.textContent = 'Correct!';
                feedbackText.textContent = 'Well done! You got it right.';
                feedback.classList.remove('bg-white', 'border-gray-200', 'text-gray-700');
                feedback.classList.add('bg-green-100', 'border-green-400', 'text-green-700');
            } else {
                feedbackTitle.textContent = 'Incorrect!';
                feedbackText.textContent = `Sorry, that's not the right answer. The correct answer was "${currentQuestion.correctAnswer}".`;
                feedback.classList.remove('bg-white', 'border-gray-200', 'text-gray-700');
                feedback.classList.add('bg-red-100', 'border-red-400', 'text-red-700');
            }
            feedback.classList.remove('hidden');
            nextButton.classList.remove('hidden');
            Array.from(answerOptions.children).forEach(option => {
                option.classList.remove('cursor-pointer', 'hover:bg-indigo-600');
                option.classList.add('opacity-70', 'pointer-events-none');
            });
        }
        function handleNextQuestion() {
            if (currentQuestionIndex < quizData.length - 1) {
                currentQuestionIndex++;
                displayQuestion();
            } else {
                displayResult();
            }
        }
        function displayResult() {
            questionContainer.classList.add('hidden');
            nextButton.classList.add('hidden');
            restartButton.classList.remove('hidden');
            progressDisplay.classList.add('hidden');
            const percentage = (score / quizData.length) * 100;
            let message = '';
            if (percentage === 100) {
                message = "Perfect score! You're a FAME expert!";
                feedback.classList.remove('bg-red-100', 'border-red-400', 'text-red-700', 'bg-green-100', 'border-green-400', 'text-green-700');
                feedback.classList.add('bg-yellow-100', 'border-yellow-400', 'text-yellow-700');
            } else if (percentage >= 80) {
                message = "Great job! You have a strong understanding of FAME.";
                feedback.classList.remove('bg-red-100', 'border-red-400', 'text-red-700', 'bg-yellow-100', 'border-yellow-400', 'text-yellow-700');
                feedback.classList.add('bg-green-100', 'border-green-400', 'text-green-700');
            } else if (percentage >= 60) {
                message = "Good effort! You're on your way to mastering FAME.";
                feedback.classList.remove('bg-red-100', 'border-red-400', 'text-red-700', 'bg-green-100', 'border-green-400', 'text-green-700');
                feedback.classList.add('bg-yellow-100', 'border-yellow-400', 'text-yellow-700');
            } else {
                message = "Keep learning about FAME. You'll get there!";
                feedback.classList.remove('bg-green-100', 'border-green-400', 'text-green-700', 'bg-yellow-100', 'border-yellow-400', 'text-yellow-700');
                feedback.classList.add('bg-red-100', 'border-red-400', 'text-red-700');
            }
            feedbackTitle.textContent = 'Your Results';
            feedbackText.textContent = `You scored ${score} out of ${quizData.length}. ${message}`;
            feedback.classList.remove('hidden');
        }
        function handleRestartQuiz() {
            currentQuestionIndex = 0;
            score = 0;
            userAnswers = [];
            questionContainer.classList.remove('hidden');
            nextButton.classList.remove('hidden');
            restartButton.classList.add('hidden');
            feedback.classList.add('hidden');
            displayQuestion();
        }
        nextButton.addEventListener('click', handleNextQuestion);
        restartButton.addEventListener('click', handleRestartQuiz);
        displayQuestion();
    </script>
</body>
</html>
